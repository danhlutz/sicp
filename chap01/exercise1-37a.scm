(define (cont-frac n d k)
  (cont-frac-rec n d k 1))

(define (cont-frac-rec n d k index)
  (let ((n-value (n index))
        (d-value (d index)))
    (if (= k index)
        (/ n-value d-value)
        (/ n-value (+ d-value (cont-frac-rec n d k (+ index 1)))))))

(newline)
(display "Standard definiton of Phi")
(newline)
(display (/ (+ 1 (sqrt 5)) 2))
(newline)
(display "Estimating with cont fraction k = 10")
(newline)
(display (/ 1.0 (cont-frac (lambda (i) 1) (lambda (i) 1) 10)))
(newline)
(display "Estimating with cont fraction k = 20")
(newline)
(display (/ 1.0 (cont-frac (lambda (i) 1) (lambda (i) 1) 20)))
(newline)
(display "Estimating with cont fraction k = 50")
(newline)
(display (/ 1.0 (cont-frac (lambda (i) 1) (lambda (i) 1) 50)))
(newline)
(display "Estimating with cont fraction k = 100")
(newline)
(display (/ 1.0 (cont-frac (lambda (i) 1) (lambda (i) 1) 100)))
(newline)
(display "Estimating with cont fraction k = 1,000")
(newline)
(display (/ 1.0 (cont-frac (lambda (i) 1) (lambda (i) 1) 1000)))
(newline)
(display "Estimating with cont fraction k = 10,000")
(newline)
(display (/ 1.0 (cont-frac (lambda (i) 1) (lambda (i) 1) 10000)))
(newline)
